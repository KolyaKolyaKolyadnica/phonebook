{"version":3,"file":"static/js/406.285ea6b7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.js","webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js","redux/auth/auth-actions.js","utils/mui-theme.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__dLGlB\"};","import { useState } from 'react';\r\nimport {\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  IconButton,\r\n  Input,\r\n  ThemeProvider,\r\n  Button,\r\n  FormHelperText,\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport theme from 'utils/mui-theme';\r\nimport style from './Form.module.css';\r\n\r\nconst Form = ({ submitForm, setUsername = null, setEmail, setPassword }) => {\r\n  // mui password (start)\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(show => !show);\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n  // mui password (end)\r\n\r\n  return (\r\n    <form className={style.form} onSubmit={submitForm}>\r\n      {setUsername && (\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl\r\n            color=\"neutral\"\r\n            variant=\"standard\"\r\n            onChange={e => setUsername(e.target.value)}\r\n          >\r\n            <InputLabel>Username:</InputLabel>\r\n            <Input\r\n              sx={{\r\n                fontFamily: 'Indie Flower',\r\n              }}\r\n            />\r\n            <FormHelperText id=\"component-helper-text\">\r\n              This is your life, enter whatever you want\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </ThemeProvider>\r\n      )}\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <FormControl\r\n          color=\"neutral\"\r\n          variant=\"standard\"\r\n          onChange={e => setEmail(e.target.value)}\r\n        >\r\n          <InputLabel>Email:</InputLabel>\r\n          <Input\r\n            sx={{\r\n              fontFamily: 'Indie Flower',\r\n            }}\r\n            inputProps={{\r\n              pattern: '^([a-zA-Z0-9_.-]+)@([a-z0-9_.-]+).([a-z.]{2,6})$',\r\n            }}\r\n            type=\"email\"\r\n          />\r\n          <FormHelperText id=\"component-helper-text\">\r\n            Latin letters/numbers/symbols, one @-symbol, one or more dot\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </ThemeProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <FormControl\r\n          color=\"neutral\"\r\n          variant=\"standard\"\r\n          onChange={e => setPassword(e.target.value)}\r\n        >\r\n          <InputLabel htmlFor=\"standard-adornment-password\">\r\n            Password:\r\n          </InputLabel>\r\n          <Input\r\n            sx={{\r\n              fontFamily: 'Indie Flower',\r\n            }}\r\n            inputProps={{\r\n              pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^ws]).{6,}',\r\n            }}\r\n            type={showPassword ? 'text' : 'password'}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          <FormHelperText id=\"component-helper-text\">\r\n            Min 6 any symbols. Required 'a-z', 'A-Z', '0-9'\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </ThemeProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"neutral\"\r\n          variant=\"outlined\"\r\n          sx={{\r\n            mt: '20px',\r\n          }}\r\n        >\r\n          {setUsername ? 'Sign In' : 'Log in'}\r\n        </Button>\r\n      </ThemeProvider>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterPage_container__cGN-x\",\"decor\":\"RegisterPage_decor__xCZyd\",\"coment\":\"RegisterPage_coment__-VPGU\",\"comentText\":\"RegisterPage_comentText__NYXCj\"};","import { toast } from 'react-toastify';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postNewUser } from 'redux/auth/auth-options';\r\nimport authActions from 'redux/auth/auth-actions';\r\nimport Form from 'components/Form';\r\n\r\nimport style from './RegisterPage.module.css';\r\n\r\nconst RegisterPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const error = useSelector(state => state.auth.error);\r\n\r\n  useEffect(() => {\r\n    dispatch(authActions.errorClear());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n    if (username === '' || email === '' || password === '') {\r\n      dispatch(authActions.errorClear());\r\n    }\r\n\r\n    toast.error(`${error}`, {\r\n      position: 'top-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: 'colored',\r\n    });\r\n  }, [error]);\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      postNewUser({\r\n        name: username,\r\n        email: email,\r\n        password: password,\r\n      })\r\n    );\r\n\r\n    setUsername('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <Form\r\n        submitForm={submitForm}\r\n        setUsername={setUsername}\r\n        setEmail={setEmail}\r\n        setPassword={setPassword}\r\n      />\r\n\r\n      <div className={style.coment}>\r\n        <p className={style.comentText}>Who are you warrior?</p>\r\n      </div>\r\n\r\n      <div className={style.decor}></div>\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const authSignUp = createAction('auth/authSignUp');\r\n// const authLogIn = createAction('auth/authLogIn');\r\n// const authLogOut = createAction('auth/authLogOut');\r\n\r\nconst errorClear = createAction('auth/errorClear');\r\n\r\nconst authActions = { errorClear };\r\nexport default authActions;\r\n","import { createTheme } from '@mui/material';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n      'Permanent Marker',\r\n      'Indie Flower',\r\n    ].join(','),\r\n  },\r\n  palette: {\r\n    neutral: {\r\n      main: 'rgb(70, 70, 70)',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n"],"names":["submitForm","setUsername","setEmail","setPassword","useState","showPassword","setShowPassword","className","style","onSubmit","ThemeProvider","theme","FormControl","color","variant","onChange","e","target","value","InputLabel","Input","sx","fontFamily","FormHelperText","id","inputProps","pattern","type","htmlFor","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","VisibilityOff","Visibility","Button","mt","username","email","password","dispatch","useDispatch","error","useSelector","state","auth","useEffect","authActions","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Form","postNewUser","name","errorClear","createAction","createTheme","typography","join","palette","neutral","main"],"sourceRoot":""}