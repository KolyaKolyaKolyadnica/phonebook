{"version":3,"file":"static/js/406.2b60aae2.chunk.js","mappings":"gUACA,EAAuB,2B,SCuIvB,EArHqB,SAAC,GAKf,IAJLA,EAII,EAJJA,WAII,IAHJC,YAAAA,OAGI,MAHU,KAGV,EAFJC,EAEI,EAFJA,SACAC,EACI,EADJA,YAGA,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAOMC,GAAqBC,EAAAA,EAAAA,KACzB,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,kBAAf,IAGP,OACE,kBAAMI,UAAWC,EAAYC,SAAUb,EAAvC,UACGC,IACC,SAACa,EAAA,EAAD,CAAeC,MAAOA,EAAAA,EAAtB,UACE,UAACC,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,WACRC,SAAU,SAAAC,GAAC,OAAInB,EAAYmB,EAAEC,OAAOC,MAAzB,EAHb,WAKE,SAACC,EAAA,EAAD,yBACA,SAACC,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,mBAGhB,SAACC,EAAA,EAAD,CAAgBC,GAAG,wBAAnB,8DAON,SAACd,EAAA,EAAD,CAAeC,MAAOA,EAAAA,EAAtB,UACE,UAACC,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,WACRC,SAAU,SAAAC,GAAC,OAAIlB,EAASkB,EAAEC,OAAOC,MAAtB,EAHb,WAKE,SAACC,EAAA,EAAD,sBACA,SAACC,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,gBAEdG,WAAY,CACVC,QAAS,oDAEXC,KAAK,WAEP,SAACJ,EAAA,EAAD,CAAgBC,GAAG,wBAAnB,gFAKJ,SAACd,EAAA,EAAD,CAAeC,MAAOA,EAAAA,EAAtB,UACE,UAACC,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,WACRC,SAAU,SAAAC,GAAC,OAAIjB,EAAYiB,EAAEC,OAAOC,MAAzB,EAHb,WAKE,SAACC,EAAA,EAAD,CAAYS,QAAQ,8BAApB,wBAGA,SAACR,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,gBAEdG,WAAY,CACVC,QAAS,sDAEXC,KAAM1B,EAAe,OAAS,WAC9B4B,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CACE,aAAW,6BACXC,QA1EgB,kBAAM/B,GAAgB,SAAAgC,GAAI,OAAKA,CAAL,GAA1B,EA2EhBC,YA1EgB,SAAAC,GAC9BA,EAAMC,gBACP,EAqEa,SAKGpC,GAAe,SAACqC,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,WAK5C,SAAChB,EAAA,EAAD,CAAgBC,GAAG,wBAAnB,mEAKJ,SAACd,EAAA,EAAD,CAAeC,MAAOA,EAAAA,EAAtB,UACE,SAAC6B,EAAA,EAAD,CACEb,KAAK,SACLd,MAAM,UACNC,QAAQ,WACRO,GAAI,CACFoB,GAAI,QALR,SAQGtC,GACC,SAACuC,EAAA,EAAD,CAAkBlC,MAAO,CAAEmC,MAAO,OAAQC,OAAQ,UAChD/C,EACF,UAEA,eAMX,C,uJCrID,EAA4B,gCAA5B,EAAoE,4BAApE,EAAyG,6BAAzG,EAAmJ,iC,SCmEnJ,EAzDqB,WACnB,OAAgCG,EAAAA,EAAAA,UAAS,IAAzC,eAAO6C,EAAP,KAAiBhD,EAAjB,KACA,GAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAO8C,EAAP,KAAchD,EAAd,KACA,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAO+C,EAAP,KAAiBhD,EAAjB,KAEMiD,GAAWC,EAAAA,EAAAA,MAEXC,GAAQ9C,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAK4C,KAAf,KAE/BC,EAAAA,EAAAA,YAAU,WACRH,EAASI,EAAAA,EAAAA,aACV,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACHD,IAGY,KAAbL,GAA6B,KAAVC,GAA6B,KAAbC,GACrCC,EAASI,EAAAA,EAAAA,cAGXC,EAAAA,GAAAA,MAAA,UAAeH,GAASI,EAAAA,GACzB,GAAE,CAACJ,IAkBJ,OACE,iBAAK3C,UAAWC,EAAhB,WACE,SAAC+C,EAAA,EAAD,CACE3D,WAnBa,SAAAoB,GACjBA,EAAEqB,iBAEFW,GACEQ,EAAAA,EAAAA,IAAY,CACVC,KAAMZ,EACNC,MAAOA,EACPC,SAAUA,KAIdlD,EAAY,IACZC,EAAS,IACTC,EAAY,GACb,EAMKF,YAAaA,EACbC,SAAUA,EACVC,YAAaA,KAGf,gBAAKQ,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,qCAGF,gBAAKD,UAAWC,MAGrB,C,0BC3DK4C,EAAc,CAAEM,YAFHC,E,QAAAA,IAAa,oBAGhC,K,2BCPMhD,GAAQiD,E,QAAAA,GAAY,CACxBC,WAAY,CACVvC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,oBACA,mBACA,gBACAwC,KAAK,MAETC,QAAS,CACPC,QAAS,CACPC,KAAM,sBAKZ,K,qBC1BA,IAAMX,EAAe,CACnBvB,SAAU,eACVmC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACV7D,MAAO,WAET,K","sources":["webpack://react-homework-template/./src/components/EntranceForm/EntranceForm.module.css?efb5","components/EntranceForm/EntranceForm.js","webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js","redux/auth/auth-actions.js","utils/mui-theme.js","utils/toast-options.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"EntranceForm_form__1z+xL\"};","import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  IconButton,\r\n  Input,\r\n  ThemeProvider,\r\n  Button,\r\n  FormHelperText,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport theme from 'utils/mui-theme';\r\nimport style from './EntranceForm.module.css';\r\nimport { width } from '@mui/system';\r\n\r\nconst EntranceForm = ({\r\n  submitForm,\r\n  setUsername = null,\r\n  setEmail,\r\n  setPassword,\r\n}) => {\r\n  // mui password (start)\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(show => !show);\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n  // mui password (end)\r\n\r\n  const isFetchCurrentUser = useSelector(\r\n    state => state.auth.isFetchCurrentUser\r\n  );\r\n\r\n  return (\r\n    <form className={style.form} onSubmit={submitForm}>\r\n      {setUsername && (\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl\r\n            color=\"neutral\"\r\n            variant=\"standard\"\r\n            onChange={e => setUsername(e.target.value)}\r\n          >\r\n            <InputLabel>Username:</InputLabel>\r\n            <Input\r\n              sx={{\r\n                fontFamily: 'Indie Flower',\r\n              }}\r\n            />\r\n            <FormHelperText id=\"component-helper-text\">\r\n              This is your life, enter whatever you want\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </ThemeProvider>\r\n      )}\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <FormControl\r\n          color=\"neutral\"\r\n          variant=\"standard\"\r\n          onChange={e => setEmail(e.target.value)}\r\n        >\r\n          <InputLabel>Email:</InputLabel>\r\n          <Input\r\n            sx={{\r\n              fontFamily: 'Indie Flower',\r\n            }}\r\n            inputProps={{\r\n              pattern: '^([a-zA-Z0-9_.-]+)@([a-z0-9_.-]+).([a-z.]{2,6})$',\r\n            }}\r\n            type=\"email\"\r\n          />\r\n          <FormHelperText id=\"component-helper-text\">\r\n            Latin letters/numbers/symbols, one @-symbol, one or more dot\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </ThemeProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <FormControl\r\n          color=\"neutral\"\r\n          variant=\"standard\"\r\n          onChange={e => setPassword(e.target.value)}\r\n        >\r\n          <InputLabel htmlFor=\"standard-adornment-password\">\r\n            Password:\r\n          </InputLabel>\r\n          <Input\r\n            sx={{\r\n              fontFamily: 'Indie Flower',\r\n            }}\r\n            inputProps={{\r\n              pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^ws]).{6,}',\r\n            }}\r\n            type={showPassword ? 'text' : 'password'}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          <FormHelperText id=\"component-helper-text\">\r\n            Min 6 any symbols. Required 'a-z', 'A-Z', '0-9'\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </ThemeProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"neutral\"\r\n          variant=\"outlined\"\r\n          sx={{\r\n            mt: '20px',\r\n          }}\r\n        >\r\n          {isFetchCurrentUser ? (\r\n            <CircularProgress style={{ width: '25px', height: '25px' }} />\r\n          ) : setUsername ? (\r\n            'Sign In'\r\n          ) : (\r\n            'Log in'\r\n          )}\r\n        </Button>\r\n      </ThemeProvider>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EntranceForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterPage_container__cGN-x\",\"decor\":\"RegisterPage_decor__xCZyd\",\"coment\":\"RegisterPage_coment__-VPGU\",\"comentText\":\"RegisterPage_comentText__NYXCj\"};","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { postNewUser } from 'redux/auth/auth-options';\r\nimport authActions from 'redux/auth/auth-actions';\r\nimport EntranceForm from 'components/EntranceForm';\r\nimport toastOptions from 'utils/toast-options';\r\n\r\nimport style from './RegisterPage.module.css';\r\n\r\nconst RegisterPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const error = useSelector(state => state.auth.error);\r\n\r\n  useEffect(() => {\r\n    dispatch(authActions.errorClear());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n    if (username === '' || email === '' || password === '') {\r\n      dispatch(authActions.errorClear());\r\n    }\r\n\r\n    toast.error(`${error}`, toastOptions);\r\n  }, [error]);\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      postNewUser({\r\n        name: username,\r\n        email: email,\r\n        password: password,\r\n      })\r\n    );\r\n\r\n    setUsername('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <EntranceForm\r\n        submitForm={submitForm}\r\n        setUsername={setUsername}\r\n        setEmail={setEmail}\r\n        setPassword={setPassword}\r\n      />\r\n\r\n      <div className={style.coment}>\r\n        <p className={style.comentText}>Who are you warrior?</p>\r\n      </div>\r\n\r\n      <div className={style.decor}></div>\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const authSignUp = createAction('auth/authSignUp');\r\n// const authLogIn = createAction('auth/authLogIn');\r\n// const authLogOut = createAction('auth/authLogOut');\r\n\r\nconst errorClear = createAction('auth/errorClear');\r\n\r\nconst authActions = { errorClear };\r\nexport default authActions;\r\n","import { createTheme } from '@mui/material';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n      'Permanent Marker',\r\n      'Indie Flower',\r\n    ].join(','),\r\n  },\r\n  palette: {\r\n    neutral: {\r\n      main: 'rgb(70, 70, 70)',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","const toastOptions = {\r\n  position: 'bottom-right',\r\n  autoClose: 5000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n  theme: 'colored',\r\n};\r\nexport default toastOptions;\r\n"],"names":["submitForm","setUsername","setEmail","setPassword","useState","showPassword","setShowPassword","isFetchCurrentUser","useSelector","state","auth","className","style","onSubmit","ThemeProvider","theme","FormControl","color","variant","onChange","e","target","value","InputLabel","Input","sx","fontFamily","FormHelperText","id","inputProps","pattern","type","htmlFor","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","VisibilityOff","Visibility","Button","mt","CircularProgress","width","height","username","email","password","dispatch","useDispatch","error","useEffect","authActions","toast","toastOptions","EntranceForm","postNewUser","name","errorClear","createAction","createTheme","typography","join","palette","neutral","main","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}