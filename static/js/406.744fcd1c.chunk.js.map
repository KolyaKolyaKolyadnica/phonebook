{"version":3,"file":"static/js/406.744fcd1c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js","redux/auth/auth-actions.js","utils/mui-theme.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterPage_container__cGN-x\",\"form\":\"RegisterPage_form__Ear2M\",\"decor\":\"RegisterPage_decor__xCZyd\",\"coment\":\"RegisterPage_coment__-VPGU\",\"comentText\":\"RegisterPage_comentText__NYXCj\",\"link\":\"RegisterPage_link__recV5\"};","import {\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  IconButton,\r\n  Input,\r\n  ThemeProvider,\r\n  Button,\r\n  FormHelperText,\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postNewUser } from 'redux/auth/auth-options';\r\nimport authActions from 'redux/auth/auth-actions';\r\nimport theme from 'utils/mui-theme';\r\n\r\nimport style from './RegisterPage.module.css';\r\n\r\nconst RegisterPage = () => {\r\n  // mui password (start)\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(show => !show);\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n  // mui password (end)\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const error = useSelector(state => state.auth.error);\r\n\r\n  useEffect(() => {\r\n    dispatch(authActions.errorClear());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n    if (username === '' || email === '' || password === '') {\r\n      dispatch(authActions.errorClear());\r\n    }\r\n\r\n    toast.error(`${error}`, {\r\n      position: 'top-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: 'colored',\r\n    });\r\n  }, [error]);\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      postNewUser({\r\n        name: username,\r\n        email: email,\r\n        password: password,\r\n      })\r\n    );\r\n\r\n    setUsername('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <form className={style.form} onSubmit={submitForm}>\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl\r\n            color=\"neutral\"\r\n            variant=\"standard\"\r\n            onChange={e => setUsername(e.target.value)}\r\n          >\r\n            <InputLabel>Username:</InputLabel>\r\n            <Input\r\n              sx={{\r\n                fontFamily: 'Indie Flower',\r\n              }}\r\n            />\r\n            <FormHelperText id=\"component-helper-text\">\r\n              This is your life, enter whatever you want\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </ThemeProvider>\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl\r\n            color=\"neutral\"\r\n            variant=\"standard\"\r\n            onChange={e => setEmail(e.target.value)}\r\n          >\r\n            <InputLabel>Email:</InputLabel>\r\n            <Input\r\n              sx={{\r\n                fontFamily: 'Indie Flower',\r\n              }}\r\n              inputProps={{\r\n                pattern: '^([a-zA-Z0-9_.-]+)@([a-z0-9_.-]+).([a-z.]{2,6})$',\r\n              }}\r\n              type=\"email\"\r\n            />\r\n            <FormHelperText id=\"component-helper-text\">\r\n              Latin letters/numbers/symbols, one @-symbol, one or more dot\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </ThemeProvider>\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl\r\n            color=\"neutral\"\r\n            variant=\"standard\"\r\n            onChange={e => setPassword(e.target.value)}\r\n          >\r\n            <InputLabel htmlFor=\"standard-adornment-password\">\r\n              Password:\r\n            </InputLabel>\r\n            <Input\r\n              sx={{\r\n                fontFamily: 'Indie Flower',\r\n              }}\r\n              inputProps={{\r\n                pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^ws]).{6,}',\r\n              }}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n            <FormHelperText id=\"component-helper-text\">\r\n              Min 6 any symbols. Required 'a-z', 'A-Z', '0-9'\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </ThemeProvider>\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"neutral\"\r\n            variant=\"outlined\"\r\n            sx={{\r\n              mt: '20px',\r\n            }}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </ThemeProvider>\r\n      </form>\r\n\r\n      <div className={style.coment}>\r\n        <p className={style.comentText}>Who are you warrior?</p>\r\n      </div>\r\n\r\n      <div className={style.decor}></div>\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const authSignUp = createAction('auth/authSignUp');\r\n// const authLogIn = createAction('auth/authLogIn');\r\n// const authLogOut = createAction('auth/authLogOut');\r\n\r\nconst errorClear = createAction('auth/errorClear');\r\n\r\nconst authActions = { errorClear };\r\nexport default authActions;\r\n","import { createTheme } from '@mui/material';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n      'Permanent Marker',\r\n      'Indie Flower',\r\n    ].join(','),\r\n  },\r\n  palette: {\r\n    neutral: {\r\n      main: 'rgb(70, 70, 70)',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n"],"names":["useState","showPassword","setShowPassword","username","setUsername","email","setEmail","password","setPassword","dispatch","useDispatch","error","useSelector","state","auth","useEffect","authActions","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","className","style","onSubmit","e","preventDefault","postNewUser","name","ThemeProvider","FormControl","color","variant","onChange","target","value","InputLabel","Input","sx","fontFamily","FormHelperText","id","inputProps","pattern","type","htmlFor","endAdornment","InputAdornment","IconButton","onClick","show","onMouseDown","event","VisibilityOff","Visibility","Button","mt","errorClear","createAction","createTheme","typography","join","palette","neutral","main"],"sourceRoot":""}