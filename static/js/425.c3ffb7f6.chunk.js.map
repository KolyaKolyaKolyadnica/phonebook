{"version":3,"file":"static/js/425.c3ffb7f6.chunk.js","mappings":"4UACA,GAAgB,UAAY,6BAA6B,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,yBAAyB,OAAS,0BAA0B,WAAa,8BAA8B,UAAY,6BAA6B,SAAW,6B,SCqBtRA,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,sBA4GZ,EAtGkB,WAEhB,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAOA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,OAEUC,EAAAA,EAAAA,KACzB,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,kBAAf,IAiBP,OACE,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,yBAEA,kBAAMD,UAAWC,EAAAA,KAAYC,SAlBd,SAAAC,GACjBA,EAAEC,iBAEFV,GACEW,EAAAA,EAAAA,IAAU,CACRf,MAAAA,EACAE,SAAAA,KAIJD,EAAS,IACTE,EAAY,GACb,EAMG,WACE,SAACa,EAAA,EAAD,CAAexB,MAAOA,EAAtB,UACE,SAACyB,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,SAAU,SAAAR,GAAC,OAAIZ,EAASY,EAAES,OAAOC,MAAtB,EACXC,MAAM,eAIV,SAACR,EAAA,EAAD,CAAexB,MAAOA,EAAtB,UACE,UAACiC,EAAA,EAAD,CACED,MAAM,UACNJ,QAAQ,WACRC,SAAU,SAAAR,GAAC,OAAIV,EAAYU,EAAES,OAAOC,MAAzB,EAHb,WAKE,SAACG,EAAA,EAAD,CAAYC,QAAQ,8BAApB,wBAGA,SAACC,EAAA,EAAD,CAEEC,KAAM/B,EAAe,OAAS,WAC9BgC,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CACE,aAAW,6BACXC,QA5Dc,kBAAMnC,GAAgB,SAAAoC,GAAI,OAAKA,CAAL,GAA1B,EA6DdC,YA5Dc,SAAAC,GAC9BA,EAAMvB,gBACP,EAuDe,SAKGhB,GAAe,SAACwC,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,gBAShD,SAACvB,EAAA,EAAD,CAAexB,MAAOA,EAAtB,UACE,SAACgD,EAAA,EAAD,CACEhB,MAAM,UACNJ,QAAQ,WACRqB,GAAI,CACFC,GAAI,QAJR,0BAYJ,gBAAKhC,UAAWC,EAAAA,OAAhB,UACE,eAAGD,UAAWC,EAAAA,WAAd,qCAC2B,KACzB,iBAAMD,UAAWC,EAAAA,UAAjB,gCACA,mBACA,kBAAMD,UAAWC,EAAAA,SAAjB,6BAAkD,QAClD,iBAAMD,UAAWC,EAAAA,kBAIrB,gBAAKD,UAAWC,EAAAA,UAGrB,C","sources":["webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginPage_container__khIGR\",\"title\":\"LoginPage_title__znOz9\",\"form\":\"LoginPage_form__mRMNN\",\"decor\":\"LoginPage_decor__pbb+9\",\"coment\":\"LoginPage_coment__lOv2p\",\"comentText\":\"LoginPage_comentText__W-vrD\",\"palyanica\":\"LoginPage_palyanica__CEes6\",\"nowLogin\":\"LoginPage_nowLogin__j0qKm\"};","import {\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  TextField,\r\n  IconButton,\r\n  Input,\r\n  createTheme,\r\n  ThemeProvider,\r\n  Button,\r\n} from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport { postLogin } from 'redux/auth/auth-options';\r\nimport style from './LoginPage.module.css';\r\n\r\n// 'Permanent Marker', cursive\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    neutral: {\r\n      main: 'rgb(89, 89, 89)',\r\n      // contrastText: 'rgb(0, 0, 0)',\r\n    },\r\n  },\r\n});\r\n\r\nconst LoginPage = () => {\r\n  // mui password (start)\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(show => !show);\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n  // mui password (end)\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isFetchCurrentUser = useSelector(\r\n    state => state.auth.isFetchCurrentUser\r\n  );\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      postLogin({\r\n        email,\r\n        password,\r\n      })\r\n    );\r\n\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <h1 className={style.title}>Login Page</h1>\r\n\r\n      <form className={style.form} onSubmit={submitForm}>\r\n        <ThemeProvider theme={theme}>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Email:\"\r\n            variant=\"standard\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            color=\"neutral\"\r\n          />\r\n        </ThemeProvider>\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl\r\n            color=\"neutral\"\r\n            variant=\"standard\"\r\n            onChange={e => setPassword(e.target.value)}\r\n          >\r\n            <InputLabel htmlFor=\"standard-adornment-password\">\r\n              Password:\r\n            </InputLabel>\r\n            <Input\r\n              // id=\"standard-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n        </ThemeProvider>\r\n\r\n        {/* <button className={style.login}>Log In</button> */}\r\n        <ThemeProvider theme={theme}>\r\n          <Button\r\n            color=\"neutral\"\r\n            variant=\"outlined\"\r\n            sx={{\r\n              mt: '20px',\r\n            }}\r\n          >\r\n            Log In\r\n          </Button>\r\n        </ThemeProvider>\r\n      </form>\r\n\r\n      <div className={style.coment}>\r\n        <p className={style.comentText}>\r\n          If you want to come in -{' '}\r\n          <span className={style.palyanica}>say \"palyanytsia\"</span>\r\n          <br></br>\r\n          <span className={style.nowLogin}>Now only login :{'('}</span>\r\n          <span className={style.nowLogin2}></span>\r\n        </p>\r\n      </div>\r\n\r\n      <div className={style.decor}></div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginPage;\r\n"],"names":["theme","createTheme","palette","neutral","main","useState","showPassword","setShowPassword","email","setEmail","password","setPassword","dispatch","useDispatch","useSelector","state","auth","isFetchCurrentUser","className","style","onSubmit","e","preventDefault","postLogin","ThemeProvider","TextField","id","label","variant","onChange","target","value","color","FormControl","InputLabel","htmlFor","Input","type","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","VisibilityOff","Visibility","Button","sx","mt"],"sourceRoot":""}