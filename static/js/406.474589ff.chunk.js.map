{"version":3,"file":"static/js/406.474589ff.chunk.js","mappings":"mUACA,EAA4B,gCAA5B,EAAmE,2BAAnE,EAAsG,4BAAtG,EAA2I,6BAA3I,EAAqL,iC,SCkB/KA,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,WAAY,CACVC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,oBACA,mBACA,gBACAC,KAAK,MAETC,QAAS,CACPC,QAAS,CACPC,KAAM,sBAwHZ,EAnHqB,WAEnB,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAOA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAkBjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBAAMD,UAAWC,EAAYC,SAlBd,SAAAC,GACjBA,EAAEC,iBAEFN,GACEO,EAAAA,EAAAA,IAAY,CACVC,KAAMd,EACNE,MAAOA,EACPE,SAAUA,KAIdH,EAAY,IACZE,EAAS,IACTE,EAAY,GACb,EAIG,WACE,SAACU,EAAA,EAAD,CAAe1B,MAAOA,EAAtB,UACE,UAAC2B,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,WACRC,SAAU,SAAAR,GAAC,OAAIV,EAAYU,EAAES,OAAOC,MAAzB,EAHb,WAKE,SAACC,EAAA,EAAD,yBACA,SAACC,EAAA,EAAD,CACEC,GAAI,CACFhC,WAAY,wBAMpB,SAACuB,EAAA,EAAD,CAAe1B,MAAOA,EAAtB,UACE,UAAC2B,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,WACRC,SAAU,SAAAR,GAAC,OAAIR,EAASQ,EAAES,OAAOC,MAAtB,EAHb,WAKE,SAACC,EAAA,EAAD,sBACA,SAACC,EAAA,EAAD,CACEC,GAAI,CACFhC,WAAY,wBAMpB,SAACuB,EAAA,EAAD,CAAe1B,MAAOA,EAAtB,UACE,UAAC2B,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,WACRC,SAAU,SAAAR,GAAC,OAAIN,EAAYM,EAAES,OAAOC,MAAzB,EAHb,WAKE,SAACC,EAAA,EAAD,CAAYG,QAAQ,8BAApB,wBAGA,SAACF,EAAA,EAAD,CACEC,GAAI,CACFhC,WAAY,gBAEdkC,KAAM5B,EAAe,OAAS,WAC9B6B,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CACE,aAAW,6BACXC,QA/Ec,kBAAMhC,GAAgB,SAAAiC,GAAI,OAAKA,CAAL,GAA1B,EAgFdC,YA/Ec,SAAAC,GAC9BA,EAAMtB,gBACP,EA0Ee,SAKGd,GAAe,SAACqC,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,gBAQhD,SAACrB,EAAA,EAAD,CAAe1B,MAAOA,EAAtB,UACE,SAACgD,EAAA,EAAD,CACEX,KAAK,SACLT,MAAM,UACNC,QAAQ,WACRM,GAAI,CACFc,GAAI,QALR,2BAaJ,gBAAK9B,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,qCAGF,gBAAKD,UAAWC,MAGrB,C","sources":["webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterPage_container__cGN-x\",\"form\":\"RegisterPage_form__Ear2M\",\"decor\":\"RegisterPage_decor__xCZyd\",\"coment\":\"RegisterPage_coment__-VPGU\",\"comentText\":\"RegisterPage_comentText__NYXCj\",\"link\":\"RegisterPage_link__recV5\"};","import {\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  IconButton,\r\n  Input,\r\n  createTheme,\r\n  ThemeProvider,\r\n  Button,\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { postNewUser } from 'redux/auth/auth-options';\r\n\r\nimport style from './RegisterPage.module.css';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n      'Permanent Marker',\r\n      'Indie Flower',\r\n    ].join(','),\r\n  },\r\n  palette: {\r\n    neutral: {\r\n      main: 'rgb(70, 70, 70)',\r\n    },\r\n  },\r\n});\r\n\r\nconst RegisterPage = () => {\r\n  // mui password (start)\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(show => !show);\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n  // mui password (end)\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      postNewUser({\r\n        name: username,\r\n        email: email,\r\n        password: password,\r\n      })\r\n    );\r\n\r\n    setUsername('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <form className={style.form} onSubmit={submitForm}>\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl\r\n            color=\"neutral\"\r\n            variant=\"standard\"\r\n            onChange={e => setUsername(e.target.value)}\r\n          >\r\n            <InputLabel>Username:</InputLabel>\r\n            <Input\r\n              sx={{\r\n                fontFamily: 'Indie Flower',\r\n              }}\r\n            />\r\n          </FormControl>\r\n        </ThemeProvider>\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl\r\n            color=\"neutral\"\r\n            variant=\"standard\"\r\n            onChange={e => setEmail(e.target.value)}\r\n          >\r\n            <InputLabel>Email:</InputLabel>\r\n            <Input\r\n              sx={{\r\n                fontFamily: 'Indie Flower',\r\n              }}\r\n            />\r\n          </FormControl>\r\n        </ThemeProvider>\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl\r\n            color=\"neutral\"\r\n            variant=\"standard\"\r\n            onChange={e => setPassword(e.target.value)}\r\n          >\r\n            <InputLabel htmlFor=\"standard-adornment-password\">\r\n              Password:\r\n            </InputLabel>\r\n            <Input\r\n              sx={{\r\n                fontFamily: 'Indie Flower',\r\n              }}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n        </ThemeProvider>\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"neutral\"\r\n            variant=\"outlined\"\r\n            sx={{\r\n              mt: '20px',\r\n            }}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </ThemeProvider>\r\n      </form>\r\n\r\n      <div className={style.coment}>\r\n        <p className={style.comentText}>Who are you warrior?</p>\r\n      </div>\r\n\r\n      <div className={style.decor}></div>\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n"],"names":["theme","createTheme","typography","fontFamily","join","palette","neutral","main","useState","showPassword","setShowPassword","username","setUsername","email","setEmail","password","setPassword","dispatch","useDispatch","className","style","onSubmit","e","preventDefault","postNewUser","name","ThemeProvider","FormControl","color","variant","onChange","target","value","InputLabel","Input","sx","htmlFor","type","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","VisibilityOff","Visibility","Button","mt"],"sourceRoot":""}